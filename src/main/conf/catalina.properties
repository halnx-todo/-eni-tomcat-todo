# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageAccess unless the
# corresponding RuntimePermission ("accessClassInPackage."+package) has
# been granted.
package.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.
#
# List of comma-separated packages that start with or equal this string
# will cause a security exception to be thrown when
# passed to checkPackageDefinition unless the
# corresponding RuntimePermission ("defineClassInPackage."+package) has
# been granted.
#
# by default, no packages are restricted for definition, and none of
# the class loaders supplied with the JDK call checkPackageDefinition.
#
package.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\
org.apache.jasper.,org.apache.naming.,org.apache.tomcat.

#
#
# List of comma-separated paths defining the contents of the "common"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank,the JVM system loader will be used as Catalina's "common"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values are enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
common.loader="${catalina.base}/lib","${catalina.base}/lib/*.jar","${catalina.home}/lib","${catalina.home}/lib/*.jar"

#
# List of comma-separated paths defining the contents of the "server"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.
# If left as blank, the "common" loader will be used as Catalina's "server"
# loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
server.loader=

#
# List of comma-separated paths defining the contents of the "shared"
# classloader. Prefixes should be used to define what is the repository type.
# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,
# the "common" loader will be used as Catalina's "shared" loader.
# Examples:
#     "foo": Add this folder as a class repository
#     "foo/*.jar": Add all the JARs of the specified folder as class
#                  repositories
#     "foo/bar.jar": Add bar.jar as a class repository
# Please note that for single jars, e.g. bar.jar, you need the URL form
# starting with file:.
#
# Note: Values may be enclosed in double quotes ("...") in case either the
#       ${catalina.base} path or the ${catalina.home} path contains a comma.
#       Because double quotes are used for quoting, the double quote character
#       may not appear in a path.
shared.loader=

# Default list of JAR files that should not be scanned using the JarScanner
# functionality. This is typically used to scan JARs for configuration
# information. JARs that do not contain such information may be excluded from
# the scan to speed up the scanning process. This is the default list. JARs on
# this list are excluded from all scans. The list must be a comma separated list
# of JAR file names.
# The list of JARs to skip may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
# The JARs listed below include:
# - Tomcat Bootstrap JARs
# - Tomcat API JARs
# - Catalina JARs
# - Jasper JARs
# - Tomcat JARs
# - Common non-Tomcat JARs
# - Test JARs (JUnit, Cobertura and dependencies)
tomcat.util.scan.StandardJarScanFilter.jarsToSkip=\
annotations-api.jar,\
ant-junit*.jar,\
ant-launcher.jar,\
ant.jar,\
asm-*.jar,\
aspectj*.jar,\
bootstrap.jar,\
catalina-ant.jar,\
catalina-ha.jar,\
catalina-ssi.jar,\
catalina-storeconfig.jar,\
catalina-tribes.jar,\
catalina.jar,\
cglib-*.jar,\
cobertura-*.jar,\
commons-beanutils*.jar,\
commons-codec*.jar,\
commons-collections*.jar,\
commons-daemon.jar,\
commons-dbcp*.jar,\
commons-digester*.jar,\
commons-fileupload*.jar,\
commons-httpclient*.jar,\
commons-io*.jar,\
commons-lang*.jar,\
commons-logging*.jar,\
commons-math*.jar,\
commons-pool*.jar,\
dom4j-*.jar,\
easymock-*.jar,\
ecj-*.jar,\
el-api.jar,\
geronimo-spec-jaxrpc*.jar,\
h2*.jar,\
hamcrest-*.jar,\
hibernate*.jar,\
httpclient*.jar,\
icu4j-*.jar,\
jasper-el.jar,\
jasper.jar,\
jaspic-api.jar,\
jaxb-*.jar,\
jaxen-*.jar,\
jdom-*.jar,\
jetty-*.jar,\
jmx-tools.jar,\
jmx.jar,\
jsp-api.jar,\
jstl.jar,\
jta*.jar,\
junit-*.jar,\
junit.jar,\
log4j*.jar,\
mail*.jar,\
objenesis-*.jar,\
oraclepki.jar,\
oro-*.jar,\
servlet-api-*.jar,\
servlet-api.jar,\
slf4j*.jar,\
taglibs-standard-spec-*.jar,\
tagsoup-*.jar,\
tomcat-api.jar,\
tomcat-coyote.jar,\
tomcat-dbcp.jar,\
tomcat-i18n-*.jar,\
tomcat-jdbc.jar,\
tomcat-jni.jar,\
tomcat-juli-adapters.jar,\
tomcat-juli.jar,\
tomcat-util-scan.jar,\
tomcat-util.jar,\
tomcat-websocket.jar,\
tools.jar,\
websocket-api.jar,\
wsdl4j*.jar,\
xercesImpl.jar,\
xml-apis.jar,\
xmlParserAPIs-*.jar,\
xmlParserAPIs.jar,\
xom-*.jar,\
spring-expression-5.2.10.RELEASE.jar,\
spring-session-1.3.5.RELEASE.jar,\
jackson-annotations-2.11.3.jar,\
spring-boot-starter-web-2.3.5.RELEASE.jar,\
jackson-module-parameter-names-2.11.3.jar,\
antlr-2.7.7.jar,\
jakarta.transaction-api-1.3.3.jar,\
HikariCP-3.4.5.jar,\
mariadb-java-client-2.6.2.jar,\
classmate-1.5.1.jar,\
jul-to-slf4j-1.7.30.jar,\
spring-boot-starter-thymeleaf-2.3.5.RELEASE.jar,\
javassist-3.24.0-GA.jar,\
jakarta.el-3.0.3.jar,\
spring-boot-starter-data-jpa-2.3.5.RELEASE.jar,\
jakarta.activation-1.2.2.jar,\
spring-web-5.2.10.RELEASE.jar,\
istack-commons-runtime-3.0.11.jar,\
jackson-datatype-jdk8-2.11.3.jar,\
unbescape-1.1.6.RELEASE.jar,\
spring-boot-starter-2.3.5.RELEASE.jar,\
jakarta.persistence-api-2.2.3.jar,\
attoparser-2.0.5.RELEASE.jar,\
jquery-2.1.1.jar,\
spring-boot-2.3.5.RELEASE.jar,\
logback-core-1.2.3.jar,\
jboss-logging-3.4.1.Final.jar,\
spring-jdbc-5.2.10.RELEASE.jar,\
bootstrap-3.2.0.jar,\
spring-jcl-5.2.10.RELEASE.jar,\
spring-tx-5.2.10.RELEASE.jar,\
spring-core-5.2.10.RELEASE.jar,\
spring-aspects-5.2.10.RELEASE.jar,\
jakarta.annotation-api-1.3.5.jar,\
jakarta.activation-api-1.2.2.jar,\
spring-aop-5.2.10.RELEASE.jar,\
jakarta.xml.bind-api-2.3.3.jar,\
spring-webmvc-5.2.10.RELEASE.jar,\
thymeleaf-spring5-3.0.11.RELEASE.jar,\
jackson-core-2.11.3.jar,\
jandex-2.1.3.Final.jar,\
spring-boot-starter-aop-2.3.5.RELEASE.jar,\
spring-boot-autoconfigure-2.3.5.RELEASE.jar,\
spring-boot-starter-validation-2.3.5.RELEASE.jar,\
byte-buddy-1.10.17.jar,\
snakeyaml-1.26.jar,\
spring-boot-starter-jdbc-2.3.5.RELEASE.jar,\
txw2-2.3.3.jar,\
spring-context-5.2.10.RELEASE.jar,\
spring-boot-starter-json-2.3.5.RELEASE.jar,\
spring-data-commons-2.3.5.RELEASE.jar,\
jackson-databind-2.11.3.jar,\
thymeleaf-3.0.11.RELEASE.jar,\
thymeleaf-extras-java8time-3.0.4.RELEASE.jar,\
spring-boot-starter-logging-2.3.5.RELEASE.jar,\
webjars-locator-core-0.46.jar,\
classgraph-4.8.69.jar,\
jakarta.validation-api-2.0.2.jar,\
spring-orm-5.2.10.RELEASE.jar,\
spring-data-jpa-2.3.5.RELEASE.jar,\
jackson-datatype-jsr310-2.11.3.jar,\
logback-classic-1.2.3.jar,\
spring-beans-5.2.10.RELEASE.jar

# Default list of JAR files that should be scanned that overrides the default
# jarsToSkip list above. This is typically used to include a specific JAR that
# has been excluded by a broad file name pattern in the jarsToSkip list.
# The list of JARs to scan may be over-ridden at a Context level for individual
# scan types by configuring a JarScanner with a nested JarScanFilter.
tomcat.util.scan.StandardJarScanFilter.jarsToScan=\
log4j-taglib*.jar,\
log4j-web*.jar,\
log4javascript*.jar,\
slf4j-taglib*.jar

# String cache configuration.
tomcat.util.buf.StringCache.byte.enabled=true
#tomcat.util.buf.StringCache.char.enabled=true
#tomcat.util.buf.StringCache.trainThreshold=500000
#tomcat.util.buf.StringCache.cacheSize=5000